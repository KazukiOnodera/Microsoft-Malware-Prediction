#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Jan 24 17:41:39 2019

@author: kazuki.onodera

count category


"""

import numpy as np
import pandas as pd
import gc

from multiprocessing import Pool
#from sklearn.preprocessing import LabelEncoder

import utils

PREF = 'f003'


col_cat = ['ProductName',
         'EngineVersion',
         'AppVersion',
         'AvSigVersion',
         'Platform',
         'Processor',
         'OsVer',
         'OsPlatformSubRelease',
         'OsBuildLab',
         'SkuEdition',
         'PuaMode',
         'SmartScreen',
         'Census_MDC2FormFactor',
         'Census_DeviceFamily',
         'Census_ProcessorClass',
         'Census_PrimaryDiskTypeName',
         'Census_ChassisTypeName',
         'Census_PowerPlatformRoleName',
         'Census_InternalBatteryType',
         'Census_OSVersion',
         'Census_OSArchitecture',
         'Census_OSBranch',
         'Census_OSEdition',
         'Census_OSSkuName',
         'Census_OSInstallTypeName',
         'Census_OSWUAutoUpdateOptionsName',
         'Census_GenuineStateName',
         'Census_ActivationChannel',
         'Census_FlightRing']

def multi(category):
    trte[category]
    return

# =============================================================================
# main
# =============================================================================
if __name__ == "__main__":
    utils.start(__file__)
    
    tr = pd.read_pickle('../data/train.pkl')[col_cat]
    te = pd.read_pickle('../data/test.pkl')[col_cat]
    
    trte = pd.concat([tr, te], ignore_index=True)
    del tr, te; gc.collect()
    
    for c in col_cat:
        tr[c].fillna('na dayo', inplace=True)
        te[c].fillna('na dayo', inplace=True)
        le.fit( tr[c].append(te[c]) )
        tr[c] = le.transform(tr[c])
        te[c]  = le.transform(te[c])
        
    tr.add_prefix(PREF+'_').to_pickle(f'../data/train_{PREF}.pkl')
    te.add_prefix(PREF+'_').to_pickle(f'../data/test_{PREF}.pkl')
    
    
    print('==== categories ====')
    print(tr.head().add_prefix(PREF+'_').columns.tolist())
    
    utils.end(__file__)
