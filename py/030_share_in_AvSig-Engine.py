#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Mar 11 11:56:33 2019

@author: kazuki.onodera
"""

import numpy as np
import pandas as pd
from tqdm import tqdm
import os
import utils
utils.start(__file__)
#==============================================================================


PREF = 'f030'

cat1 = 'AvSigVersion'
cat2 = 'EngineVersion'

categorical_w_version = [
                         
                         'Census_OSUILocaleIdentifier',
                         'AVProductsInstalled',
                         'Census_FirmwareVersionIdentifier',
                         'Wdft_IsGamer',
                         'Census_ThresholdOptIn',
                         'RtpStateBitfield',
                         'Census_IsSecureBootEnabled',
                         'AVProductsEnabled',
                         'HasTpm',
                         'IsProtected',
                         'Census_PrimaryDiskTypeName',
                         'PuaMode',
                         'DefaultBrowsersIdentifier',
                         'IsSxsPassiveMode',
                         'OrganizationIdentifier',
                         'Census_IsAlwaysOnAlwaysConnectedCapable',
                         'ProductName',
                         'GeoNameIdentifier',
                         'Census_IsVirtualDevice',
                         'Census_PowerPlatformRoleName',
                         'Census_IsTouchEnabled',
                         'Census_OSSkuName',
                         'OsPlatformSubRelease',
                         'Census_FlightRing',
                         'Census_OSEdition',
                         'Census_IsPortableOperatingSystem',
                         'Firewall',
                         'OsBuildLab',
                         'Census_DeviceFamily',
                         'Census_IsPenCapable',
                         'SMode',
                         'Platform',
                         'Census_IsFlightingInternal',
                         'Census_OEMNameIdentifier',
                         'Census_InternalBatteryType',
                         'OsBuild',
                         'Census_HasOpticalDiskDrive',
                         'Census_IsWIMBootEnabled',
                         'Census_OSBuildRevision',
                         'CityIdentifier',
                         'IeVerIdentifier',
                         'Census_ProcessorClass',
                         'OsSuite',
                         'Census_IsFlightsDisabled',
                         'Census_ChassisTypeName',
                         'LocaleEnglishNameIdentifier',
                         'Census_OSArchitecture',
                         'CountryIdentifier',
                         'Census_OSInstallLanguageIdentifier',
                         'Census_OSInstallTypeName',
                         'Census_OSBuildNumber',
                         'AutoSampleOptIn',
                         'OsVer',
                         'SkuEdition',
                         'UacLuaenable',
                         'Census_OEMModelIdentifier',
                         'Census_OSBranch',
                         'Processor',
                         'Census_ProcessorModelIdentifier',
                         'Census_ActivationChannel',
                         'IsBeta',
                         'Census_MDC2FormFactor',
                         'Census_OSWUAutoUpdateOptionsName',
                         'AVProductStatesIdentifier',
                         'Census_GenuineStateName',
                         'Census_FirmwareManufacturerIdentifier',
                         'Wdft_RegionIdentifier',
                         'Census_ProcessorManufacturerIdentifier',  
                         'OsBuildLab_major',
                         'OsBuildLab_minor',
                         'OsBuildLab_build',
                         'OsBuildLab_architecture',
                         
                         
                         'EngineVersion',
                         'AppVersion',
                         'AvSigVersion',
                         'Census_OSVersion',
                         
                         ]


def fe(input_path, output_path):
    """
    input_path  = '../data/train.f'
    output_path = '../data/train_{PREF}.f'
    """
    
    print('loading...', input_path)
    base = pd.read_feather(input_path)[categorical_w_version]
    
    feature = pd.DataFrame(index=base.index)
    cat = [cat1, cat2]
    cat_size = base.groupby(cat).size()
    
    for c in tqdm(categorical_w_version):
        if c in [cat1, cat2]:
            continue
        
        col = cat + [c]
        df = base.groupby(col).size() / cat_size
        df = df.reset_index()
        
        feature[f'{PREF}_{c}-in-{"-".join(cat)}'] = pd.merge(base[col], df, on=col, how='left')[0]
    
    print('writing...', output_path)
    feature.to_feather(output_path)
    
    return


#tr = pd.read_feather('../data/train.f')[categorical_wo_version+['Census_OSVersion']]
#te = pd.read_feather('../data/test.f')[categorical_wo_version+['Census_OSVersion']]

fe('../data/train.f', f'../data/train_{PREF}.f')
fe('../data/test.f',  f'../data/test_{PREF}.f')


#==============================================================================
utils.end(__file__)
#utils.stop_instance()

