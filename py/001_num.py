#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Jan 23 21:27:33 2019

@author: kazuki.onodera
"""

import numpy as np
import pandas as pd
from multiprocessing import Pool
import utils

PREF = 'f001'

#[c for c in utils.DTYPES if not c.endswith('Identifier') and utils.DTYPES[c]!='object']
col_num = [
        'IsBeta',
         'RtpStateBitfield',
         'IsSxsPassiveMode',
         'AVProductsInstalled',
         'AVProductsEnabled',
         'HasTpm',
         'OsBuild',
         'OsSuite',
         'IsProtected',
         'AutoSampleOptIn',
         'SMode',
         'Firewall',
         'UacLuaenable',
         'Census_ProcessorCoreCount',
         'Census_PrimaryDiskTotalCapacity',
         'Census_SystemVolumeTotalCapacity',
         'Census_HasOpticalDiskDrive',
         'Census_TotalPhysicalRAM',
         'Census_InternalPrimaryDiagonalDisplaySizeInInches',
         'Census_InternalPrimaryDisplayResolutionHorizontal',
         'Census_InternalPrimaryDisplayResolutionVertical',
         'Census_InternalBatteryNumberOfCharges',
         'Census_OSBuildNumber',
         'Census_OSBuildRevision',
         'Census_IsPortableOperatingSystem',
         'Census_IsFlightingInternal',
         'Census_IsFlightsDisabled',
         'Census_ThresholdOptIn',
         'Census_IsSecureBootEnabled',
         'Census_IsWIMBootEnabled',
         'Census_IsVirtualDevice',
         'Census_IsTouchEnabled',
         'Census_IsPenCapable',
         'Census_IsAlwaysOnAlwaysConnectedCapable',
         'Wdft_IsGamer'
         ]


def main(args):
    """
    
    input_path, output_path = '../data/train.f', f'../data/train_{PREF}.f'
    
    """
    
    input_path, output_path = args
    
    df = pd.read_feather(input_path)[col_num]
    
    df.add_prefix(PREF+'_').to_feather(output_path)
    
    return


# =============================================================================
# main
# =============================================================================
if __name__ == "__main__":
    utils.start(__file__)
    
    argss = []
    argss.append(['../data/train.f', f'../data/train_{PREF}.f'])
    argss.append(['../data/test.f',  f'../data/test_{PREF}.f'])
    
    pool = Pool( 2 )
    pool.map(main, argss)
    pool.close()
    
    utils.end(__file__)


